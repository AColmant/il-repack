{"name":"Il-repack","tagline":"Open-source alternative to ILMerge","body":"[![Build status](https://img.shields.io/appveyor/ci/gluck/il-repack.svg?label=build windows)](https://ci.appveyor.com/project/gluck/il-repack) [![Build Status](https://img.shields.io/travis/gluck/il-repack.svg?label=build linux)](https://travis-ci.org/gluck/il-repack) [![NuGet](https://img.shields.io/nuget/dt/ILRepack.svg)](https://www.nuget.org/packages/ILRepack/) [![NuGet](https://img.shields.io/nuget/v/ILRepack.svg)](https://www.nuget.org/packages/ILRepack/) [![GitHub license](https://img.shields.io/github/license/gluck/il-repack.svg)](http://www.apache.org/licenses/LICENSE-2.0)   \r\n[![Gitter chat](https://img.shields.io/badge/gitter-join%20chat-green.svg)](https://gitter.im/gluck/il-repack)\r\n\r\nIntroduction\r\n============\r\n\r\nILRepack is meant at replacing [ILMerge](http://www.microsoft.com/downloads/details.aspx?FamilyID=22914587-B4AD-4EAE-87CF-B14AE6A939B0&displaylang=en) / [Mono.Merge](http://evain.net/blog/articles/2006/11/06/an-introduction-to-mono-merge).\r\n\r\nThe former being closed-source, impossible to customize, slow, resource consuming and many more.\r\nThe later being deprecated, unsupported, and based on an old version of Mono.Cecil.\r\n\r\nHere we're using latest (slightly modified) Cecil sources (0.9), you can find the fork [here](https://github.com/gluck/cecil).\r\nMono.Posix is also required (build only, it gets merged afterwards) for executable bit set on target file.\r\n\r\nDownloads\r\n------\r\n\r\nYou can grab it using [NuGet](http://nuget.org/packages/ILRepack/).\r\n\r\nOr if you're old-school (and want to stay like that), this [direct link](http://nuget.org/api/v2/package/ILRepack) will give you the latest nupkg file, which you can open as a zip file.\r\n\r\nSyntax\r\n------\r\n\r\nA console application has been released (can be used as DLL as well), using same syntax as ILMerge:\r\n```\r\nSyntax: ILRepack.exe [options] /out:<path> <path_to_primary> [<other_assemblies> ...]\r\n\r\n  - /help              displays this usage\r\n - /keyfile:<path>    specifies a keyfile to sign the output assembly\r\n - /log:<logfile>     enable logging (to a file, if given) (default is disabled)\r\n - /ver:M.X.Y.Z       target assembly version\r\n - /union             merges types with identical names into one\r\n - /ndebug            disables symbol file generation\r\n - /copyattrs         copy assembly attributes (by default only the primary assembly attributes are copied)\r\n - /attr:<path>       take assembly attributes from the given assembly file\r\n - /allowMultiple     when copyattrs is specified, allows multiple attributes (if type allows)\r\n - /target:kind       specify target assembly kind (library, exe, winexe supported, default is same as first assembly)\r\n - /targetplatform:P  specify target platform (v1, v1.1, v2, v4 supported)\r\n - /xmldocs           merges XML documentation as well\r\n - /lib:<path>        adds the path to the search directories for referenced assemblies (can be specified multiple times)\r\n - /internalize       sets all types but the ones from the first assembly 'internal'\r\n - /delaysign         sets the key, but don't sign the assembly\r\n - /usefullpublickeyforreferences - NOT IMPLEMENTED\r\n - /align             - NOT IMPLEMENTED\r\n - /closed            - NOT IMPLEMENTED\r\n - /allowdup:Type     allows the specified type for being duplicated in input assemblies\r\n - /allowduplicateresources allows to duplicate resources in output assembly (by default they're ignored)\r\n - /zeropekind        allows assemblies with Zero PeKind (but obviously only IL will get merged)\r\n - /wildcards         allows (and resolves) file wildcards (e.g. `*`.dll) in input assemblies\r\n - /parallel          use as many CPUs as possible to merge the assemblies\r\n - /pause             pause execution once completed (good for debugging)\r\n - /verbose           shows more logs\r\n - /out:<path>        target assembly path, symbol/config/doc files will be written here as well\r\n - <path_to_primary>  primary assembly, gives the name, version to the merged one\r\n - <other_assemblies> ...\r\n\r\nNote: for compatibility purposes, all options can be specified using '/', '-' or '--' prefix.\r\n```\r\n\r\nHow to build\r\n------\r\n\r\nBuilds directly from within VS, or using gradle:\r\n\r\n```\r\ngit clone --recursive https://github.com/gluck/il-repack.git\r\ncd il-repack\r\ngradlew.bat msbuild\r\n```\r\n\r\n(Mono.Posix 3.5-compatible dependency was grabbed from a non-standard nuget repo, it has been commited to git to avoid the dependency on this repo)\r\n\r\nTODO\r\n------\r\n  * Crash-testing\r\n  * Add remaining features from ILMerge (closed / align)\r\n  * Un-fork Cecil\r\n  * Merge import process & reference fixing\r\n\r\nDONE\r\n------\r\n  * PDBs & MDBs should be merged (Thanks Simon)\r\n  * Fixed internal method overriding public one which isn't allowed in the same assembly (Simon)\r\n  * Attribute merge (/copyattrs)\r\n  * XML documentation merge\r\n  * Clean command line parameter parsing\r\n  * Add usage / version\r\n  * App.config merge\r\n  * Internalizing types (Simon)\r\n  * Delay signing (Simon)\r\n  * Target platform selection (Simon)\r\n  * Automatic internal type renaming\r\n\r\nSponsoring / Donations\r\n------\r\nIf you like this tool and want to express your thanks, you can contribute either time to the project (issue triage or pull-requests) or donate money to the Free Software Foundation.\r\n\r\n[![Donate](https://www.gnu.org/graphics/logo-fsf.org-tiny.png)](https://my.fsf.org/donate/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}